9/8: Practice with Haskell
- First thing I noticed: to load a file, I have to do :l filename instead of load filename.hs
- The functions I was able to implement were select_evens, select_odds, member, append, revert, zipp. I tried to do merge/merge_sort but I couldn’t find the solution.
- All of these functions were defined recursively. I referenced help online in places such as stack overflow since I am unfamiliar with Haskell and the syntax for defining functions.
- It seems that for all these functions, you define the name of the function and the data type that the input is going to be, then you define what data type the output is going to be. After that, the function will start at the head and recursively go through the list and then it finally reaches the tail.
- Even if I wasn’t able to complete the merge_sort, I am familiar with the algorithm, where you divide the array in 2 halves and then call merge_sort in the 2 halves, then join them the 2 sorted halves. Splitting in 2 halves is linear, which is O(n), and it requires additional space for the unsorted array, so it is O(nlogn)


references:
https://stackoverflow.com/questions/41198553/haskell-sort-list-by-odd-and-even?rq=1
https://stackoverflow.com/questions/18946563/haskell-function-about-even-and-odd-numbers?rq=1
https://stackoverflow.com/questions/4846974/haskell-check-if-int-is-in-a-list-of-ints
https://stackoverflow.com/questions/3938438/merging-two-lists-in-haskell
https://stackoverflow.com/questions/26847192/reverse-a-list-in-haskell
